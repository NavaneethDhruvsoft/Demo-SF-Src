<apex:page standardController="Position__c" sidebar="false" extensions="HotelLocator" recordSetVar="hotels">

<script type="text/javascript"
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBIh0IEVGpBqzm-gTYusCiTHw6rFBRENdA&sensor=false">
</script>

<style>
html, body { height: 100%; }
.page-map, .ui-content, #map-canvas { width: 100%; height:100%; padding: 0; }
#map-canvas { height: min-height: 100%; }
</style>
<script>
function initialize() {
var lat, lon;
// If we can, get the position of the user via device geolocation
if (navigator.geolocation) {
navigator.geolocation.getCurrentPosition(function(position){
lat = position.coords.latitude;
lon = position.coords.longitude;
// Use Visualforce JS Remoting to query for nearby warehouses
Visualforce.remoting.Manager.invokeAction(
'{!$RemoteAction.HotelLocator.interhotels}',
lat, lon,
function(result, event){
if (event.status) {
console.log(result);
createMap(lat, lon, result);
} else if (event.type === 'exception') {
//exception case code
} else {
}
},
{escape: true}
);
});
} else {
// Set default values for the map if the device
// doesn't have geolocation capabilities.
// This is San Francisco:
lat = 37.77493;
lon = -122.419416;
var result = [];
createMap(lat, lon, result);
}
}
function createMap(lat, lon, hotels){
// Get the map div, and center the map at the proper geolocation
var currentPosition = new google.maps.LatLng(lat,lon);
var mapDiv = document.getElementById('map-canvas');
var map = new google.maps.Map(mapDiv, {
center: currentPosition,
zoom: 13,
mapTypeId: google.maps.MapTypeId.ROADMAP
});
// Set a marker for the current location
var positionMarker = new google.maps.Marker({
map: map,
position: currentPosition,
icon: 'https://maps.google.com/mapfiles/ms/micons/green.png'
});
// Keep track of the map boundary that holds all markers
var mapBoundary = new google.maps.LatLngBounds();
mapBoundary.extend(currentPosition);
//Set markers on the map from the @RemoteAction results
var hotel;
for(var i=0; i<hotels.length ; i++) {
hotel= hotels[i];
console.log(hotels[i]);
setupMarker();
}
// Resize map to neatly fit all of the markers
map.fitBounds(mapBoundary);
function setupMarker(){
var hotelNavUrl;
// Determine if we are in Salesforce1 and set navigation
// link appropriately
try{
if(sforce.one){
hotelNavUrl =
'javascript:sforce.one.navigateToSObject(\'' +
hotel.Id + '\')';
}
} catch(err) {
console.log(err);
hotelNavUrl = '\\' + hotel.Id;
}
var hotelDetails =
'<a href="' + hotelNavUrl + '">' +
hotel.venue__c + '</a><br/>' +
hotel.venue__r.Address__c + '<br/>' +
hotel.venue__r.City__c + '<br/>' +
hotel.venue__r.Phone__c;
// Create a panel that appears when the user clicks on the marker
var infowindow = new google.maps.InfoWindow({
content: hotelDetails
});
// Add the marker to the map
var marker = new google.maps.Marker({
map: map,
position: new google.maps.LatLng(
hotel.venue__r.Location__Latitude__s,
hotel.venue__r.Location__Longitude__s)
});
mapBoundary.extend(marker.getPosition());
// Add the action to open the panel when its marker is clicked
google.maps.event.addListener(marker, 'click', function(){
infowindow.open(map, marker);
});
}
}
// Fire the initialize function when the window loads
google.maps.event.addDomListener(window, 'load', initialize);
</script> 
<body style="font-family: Arial; border: 0 none;">
<div id="map-canvas"></div>
</body>
</apex:page>