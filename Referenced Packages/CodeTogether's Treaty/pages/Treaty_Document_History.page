<apex:page title="Treaty Document History - {!codetogether__Treaty_Document__c.name}" standardController="codetogether__Treaty_Document__c" extensions="codetogether.Treaty_Document_Controller_Extension" action="{!checkAPI}" sidebar="false">
    <apex:sectionHeader title="Treaty Document History" subtitle="{!codetogether__Treaty_Document__c.name}">
    
    <p>
        <a href="/{!Treaty_Document__c.id}">&lt;&lt;Back to Treaty Document Details</a> | <a href="/apex/Treaty_Manage_Snapshots?id={!Treaty_Document__c.id}">Manage Snapshots</a>
    </p>
    <input type="checkbox" checked="true" id="compare"/><label for="compare">Compare 2 snapshots</label>
    </apex:sectionHeader>
    
    <div style="clear: both;">&nbsp;</div>
    <script type="text/javascript"
        src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript"
        src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js"></script>
    <script type="text/javascript"
    src="https://{!nodeServer}:4900/treaty/treaty.js"></script>
    <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/themes/redmond/jquery-ui.css"
        rel="stylesheet" type="text/css" />
    
    <style type="text/css">
        #hiddenDate, #histories
        {
        	display: none;
        }
        .newdate
        {
        	cursor: pointer;
        	line-height: 2em;
        	text-decoration: underline;
        }
        #right_column > div,
        #left_column > div
        {
        	margin-left: 10px;
        }
        #right_column ,
        #left_column 
        {
        	padding-bottom: 3em;
        }
        .treatyhistorymarkerP, .treatyhistorymarkerN
        {
        	position: relative;
        	display: inline;
        	float: left;
        	height: 0;
        	width: 0;
        	
        }
        .treatyhistorymarkerP div, .treatyhistorymarkerN div
        {
        	position: absolute;
        	left: -15px;

        	height: 1em;
        	width: 10px;
        	color: green;
        	font-size: 18px;
        }
        .treatyhistorymarkerN div
        {
        	color: red;
        }
        #left_dropdowns button, #right_dropdowns button
        {
        	display: none;
        }
    </style>
    
    <div id="histories">
        <apex:repeat value="{!historyList}" var="date">
   		<span>{!date[0]}</span><span>{!date[1]}</span><span>{!date[2]}</span>
    	</apex:repeat>
    </div>
    <input type="datetime" id="hiddenDate" />
    <script type="text/javascript">
    var HISTORY = (function(){
        var histories = [];
        var dates = [];
        var h = $("#histories span");
        for(var i = 0, x = h.length; i < x; i += 3)
        {
            histories.push([ h[i].innerHTML , h[i+1].innerHTML, h[i+2].innerHTML]);
            dates.push(h[i].innerHTML.substring(0,10));
            //console.debug(h[i+2].innerHTML);
        }
        h = document.getElementById("histories");
        h.parentNode.removeChild(h);
        
        var numberOfHistoriesInDropdowns = 5;
        var historiesInDropdowns = histories.slice(0, numberOfHistoriesInDropdowns);
        
        //sort history by popularity
        histories.sort(function(a, b){
            if( a[2] > b[2] )
                return -1;
            else if (a[2] < b[2])
                return 1;
                else
                    return 0;
        });
        //get the 3 most popular histories
        var mostPopular = histories.slice(0, 5);
        //resort histories by date
        histories.sort(sortFunction);
        for(var i = 0, x = mostPopular.length; i < x; i++)
        {
            //if the most popular is not already in the dropdown
            if(historiesInDropdowns.indexOf(mostPopular[i]) < 0)
            {
                //add it to the dropdown
                historiesInDropdowns.push(mostPopular[i]);
            }
        }
        
        var dmp = new diff_match_patch();
        var theDate = new Date();
        var docID = '{!Treaty_Document__c.id}';
        var sides = { left: "", right: ""};
        var compare = false;
        var current = {left: "", right: ""};
        
        
        //create datepicker... disable all dates that don't have histories on them
        var datepicker = $('#hiddenDate');
        var dps = {
            minDate: new Date(Date.parse(dates[dates.length-1].replace(/-/g, " "))),
            maxDate: new Date(Date.parse(dates[0].replace(/-/g, " "))),
            beforeShowDay: function (date) {
                function addZero(no) {
                    if (no < 10) {
                        return "0" + no;
                    } else {
                        return no;
                    }
                }
                var date_str = [
                    addZero(date.getFullYear()),
                    addZero(date.getMonth() + 1),
                    addZero(date.getDate())
                ].join('-');
                
                if ($.inArray(date_str, dates) != -1) {
                    return [true];
                } else {
                    return [false];
                }
            }
        };
        datepicker.datepicker();
        
        var timeDialog = $(document.createElement("div"));
        timeDialog.dialog({
            autoOpen: false,
            modal: true
        });
        
        var dateToString = function(now)
        {
            year = "" + now.getFullYear();
            month = "" + (now.getMonth() + 1); if (month.length == 1) { month = "0" + month; }
            day = "" + now.getDate(); if (day.length == 1) { day = "0" + day; }
            hour = "" + now.getHours(); if (hour.length == 1) { hour = "0" + hour; }
            minute = "" + now.getMinutes(); if (minute.length == 1) { minute = "0" + minute; }
            second = "" + now.getSeconds(); if (second.length == 1) { second = "0" + second; }
            return year + "-" + month + "-" + day + " " + hour + ":" + minute + ":" + second;
        }
        var doCompare = function(){
            oldText = sides.left;
            newText = sides.right;
            var diff = dmp.diff_main(oldText, newText, true);
            var patches = dmp.patch_make(oldText, newText, diff);
            var newNewText = newText;
            for(var i = 1, x = patches.length; i < x; i++)
            {
                var correction = (i-1) * 58;
                var pn = null;
                var p = patches[i];
                var start = p.start2;
                for(var k = 0, y = p.diffs.length; k < y; k++)
                {
                    if(p.diffs[k][0] != 0)
                    {
                        //determine color of arrow based on add/delete from diff
                        if(p.diffs[k][0] == -1)
                            pn = "N";
                        else
                            pn = "P";
                        break;
                    }
                    else
                    {
                        //get the starting index of this patch, corrected for the # of patches before it
                        start += p.diffs[k][1].length;    
                    }
                }
                
                //correct patch index so it's not inside a tag
                var s1 = newNewText.substring(0, start+correction);
                var s2 = newNewText.substring(start+correction);
                var gt = s2.indexOf(">");
                var lt = s2.indexOf("<");
                if(!(gt == -1 ||  lt < gt))
                {
                    start = start + gt + 1;
                    s1 = newNewText.substring(0, start+correction);
                    s2 = newNewText.substring(start+correction);
                }
                //add in the arrow marker
                newNewText =  s1 + "<div class='treatyhistorymarker"+pn+"'><div>&#9658;</div></div>" + s2; ;
            }
            document.getElementById("right_column").innerHTML = newNewText;
                    
        };
        var findTimesForDate = function(date)
        {
            var d = date.substring(6, 10) + "-" + date.substring(0, 2) + "-" + date.substring(3,5),
                times = [], d2, h, a, m, f = "";
            for(var i = 0, x = histories.length; i < x; i++)
            {
                if(histories[i][0].substring(0,10) == d)
                {
                    d2 = new Date(Date.parse(histories[i][0].replace(/-/g, " ")));
                    h = d2.getHours();
                    a = "AM";
                    if(h > 12)
                    {
                        h = h-12;
                        a = "PM";
                    }
                    m = d2.getMinutes(); 
                    m = m.length == 1? "0" + m : m;
                    f = h + ":" + m + " " + a;
                    times.push([i, f]);
                }
            }
            return times;
        };
        var selectNewTime = function(index, side)
        {
            var item = histories[index];
            if(historiesInDropdowns.indexOf(item) < 0)
            {
                historiesInDropdowns.push(item);
                updateDropdowns();
            }
            $("#" + side + "_date").val(item[0]);
            submit(side);
         };
        
        //what happens when you choose a date?  You get a list of times for that date in a new dialog
        var moreDates = function(side, date)
        {
            var times = findTimesForDate(date);
            timeDialog[0].innerHTML = "";
            for(var i = 0, x = times.length; i<x; i++)
            {
                var elem = document.createElement("div");
                elem.className = "newdate";
                elem.innerHTML = times[i][1];
                elem.id = "histories_" + times[i][0];
                $(elem).on("click", function(){
                    var index = this.id.split("_")[1];
                    selectNewTime(index, side);
                    timeDialog.dialog("close");
                });
                
                timeDialog.append(elem);
            }
            timeDialog.dialog("open");
        };
        var submit = function(side){
            var d = $("#"+side+"_date").val();
            
            if(d == "more")
            {
                datepicker.datepicker("dialog", new Date(), function(dt){ moreDates(side, dt); }, dps);
                $("#"+side+"_date").val(current[side]);
                return false;
            }
            current[side] = d;
            var c = d == "current"?"checked":"";
            if(c)
                d = "{!now}";
            document.getElementById(""+side+"_column").innerHTML = "Loading...";
            $.ajax({
                url : "apex/Treaty_Restore_History",
                type : "POST",
                data : {
                    docID : docID,
                    date: d, 
                    current: c 
                },
                success : function(data)
                {
                    sides[side] = data;
                    if(side == "left")
                    {
                        document.getElementById(side + "_column").innerHTML = sides[side];
                    }                    
                    if(compare)
                    {
                        doCompare();
                    }
                }
            });
        };
        
        
        var updateDropdowns = function(){
            var s = "<option value='current'>Current Version</option>";
            historiesInDropdowns.sort(sortFunction);
            for(var i = 0, x = historiesInDropdowns.length; i < x; i++)
            {
                s += "<option value='" + historiesInDropdowns[i][0] + "'>" + historiesInDropdowns[i][1] + "</option>";
             }
            if(numberOfHistoriesInDropdowns < histories.length)
            {    
	            s += "<option value='more'>More...</option>";
            }
            var l = $("#left_date"), r = $("#right_date"), lv = l.val(), rv = r.val();
            document.getElementById('left_date').innerHTML = s;
            document.getElementById('right_date').innerHTML = s;
            l.val(lv);
            r.val(rv);
        };
        
        
       	var obj = {}
        obj.checkCompare = function ()
        {
            compare = document.getElementById("compare").checked;
            if(compare == false)
            {
                document.getElementById("rightside").style.display = "none";
                document.getElementById("leftside").style.width = "100%";
            }
            else
            {
                doCompare();
                document.getElementById("rightside").style.display = "block";
                document.getElementById("leftside").style.width = "49%";
            }
        };
        obj.updateSelects = function(){
            updateDropdowns();                    
        };
        obj.leftSubmit = function(){
            submit("left");
        };
        
        obj.rightSubmit = function(){
            submit("right");
        }
        
        function sortFunction(a, b){
            a = a[0].split(/-| |:/g);
            b = b[0].split(/-| |:/g);
            var da = new Date(a[0], a[1], a[2], a[3], a[4], a[5]);
            var db = new Date(b[0], b[1], b[2], b[3], b[4], b[5]);
            if(da == db)
                return 0;
            else if (da < db)
                return 1;
            else 
                return -1;
       };
        
        
        return obj;
    })();
    
    $(document).ready(function(){
        HISTORY.updateSelects();
        
        
        $("#left_dropdowns select :nth-child(2)").prop('selected', true);
        
        $("#left_submit").on("click", function(){
            HISTORY.leftSubmit();
        });
        $("#left_dropdowns select").on("change", function(){
            HISTORY.leftSubmit();
            
            if($(this).val() == "more")
            {
                
            }
        });
        HISTORY.leftSubmit();
        
        $("#right_submit").on("click", function(){
            HISTORY.rightSubmit();
        });
        $("#right_dropdowns select").on("change", function(){
            HISTORY.rightSubmit();
        });
        HISTORY.rightSubmit();
        
        
        $("#compare").on("change", function(){
            HISTORY.checkCompare();
            });
    });
   
    </script>
    <div id="leftside" style="float: left; width: 49%;">
    
    <apex:pageBlock >
        <div id="left_dropdowns">
            <select id="left_date">
            </select>
            
            <button id="left_submit">
                View Snapshot
            </button>
        </div>
        <hr />
        <div id="left_column" style="overflow: auto">
            
        </div>
        
    </apex:pageBlock>
    </div>
    <div id="rightside" style="float: right; width: 49%;">
    
    <apex:pageBlock >
        <div id="right_dropdowns">
            <select id="right_date">
            </select>
            
            <button id="right_submit">
                View Snapshot
            </button>
            
        </div>
        <hr />
        <div id="right_column" style="overflow: auto">
            
        </div>
        <apex:form >
        	<apex:inputHidden value="{!codetogether__Treaty_Document__c.codetogether__Related_Object_API_Name__c}" />
        </apex:form>
    </apex:pageBlock>
    </div>
    <script type="text/javascript">
    HISTORY.checkCompare();
    </script>
</apex:page>